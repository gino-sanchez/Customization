<Graph ClassName="POItemSwap" Source="#CDATA" IsNew="True" FileType="NewDac">
    <CDATA name="Source"><![CDATA[using System;
using PX.Data;
using PX.Objects.PO;
namespace P2PDocClasses
{
    #region CustomDropDown

    public abstract class ItemSwapStatus : IBqlField
    {
        public class ListAttribute : PXStringListAttribute
        {
            public ListAttribute() : base(
                new string[] { Open, Swapped },
                new string[] { "Open", "Swapped" }
                )
            { }
        }
        public const string Open = "O";
        public const string Swapped = "S";
        public class open : Constant<string>
        {
            public open() : base(Open) { }
        }
        public class swapped : Constant<string>
        {
            public swapped() : base(Swapped) { }
        }
    }

    #endregion
    [Serializable]
  public class POItemSwap : IBqlTable
  {
    #region RecordID
    [PXDBIdentity(IsKey=true)]
    [PXUIField(DisplayName = "Record ID",Visible = false)]
    public virtual int? RecordID { get; set; }
    public abstract class recordID : PX.Data.BQL.BqlInt.Field<recordID> { }
    #endregion

    #region OrderNbr
    [PXDBString(15, IsUnicode = true, InputMask = "")]
    [PXUIField(DisplayName = "Order Nbr", Visible = false)]
    public virtual string OrderNbr { get; set; }
    public abstract class orderNbr : PX.Data.BQL.BqlString.Field<orderNbr> { }
    #endregion

    #region LineNbr
    [PXDBInt()]
    [PXUIField(DisplayName = "Line Nbr")]
    public virtual int? LineNbr { get; set; }
    public abstract class lineNbr : PX.Data.BQL.BqlInt.Field<lineNbr> { }
    #endregion

    #region OrderType
    [PXDBString(2, IsFixed = true, InputMask = "")]
    [PXUIField(DisplayName = "Order Type", Visible = false)]

    public virtual string OrderType { get; set; }
    public abstract class orderType : PX.Data.BQL.BqlString.Field<orderType> { }
    #endregion

    #region SwapQty
    [PXDBDecimal()]
    [PXUIField(DisplayName = "Swap Qty")]
    [PXDefault(TypeCode.Decimal,"0.00", PersistingCheck = PXPersistingCheck.Nothing)]
    public virtual Decimal? SwapQty { get; set; }
    public abstract class swapQty : PX.Data.BQL.BqlDecimal.Field<swapQty> { }
    #endregion

    #region SwapStatus
    [PXDBString(1, IsFixed = true, InputMask = "")]
    [PXUIField(DisplayName = "Swap Status")]
    [ItemSwapStatus.List]
    [PXDefault(ItemSwapStatus.Open, PersistingCheck = PXPersistingCheck.Nothing)]
    
    public virtual string SwapStatus { get; set; }
    public abstract class swapStatus : PX.Data.BQL.BqlString.Field<swapStatus> { }
    #endregion

    #region Remarks
    [PXDBString(60, IsUnicode = true, InputMask = "")]
    [PXUIField(DisplayName = "Remarks")]
    public virtual string Remarks { get; set; }
    public abstract class remarks : PX.Data.BQL.BqlString.Field<remarks> { }
    #endregion

    #region Tstamp
    [PXDBTimestamp()]
    [PXUIField(DisplayName = "Tstamp")]
    public virtual byte[] Tstamp { get; set; }
    public abstract class tstamp : PX.Data.BQL.BqlByteArray.Field<tstamp> { }
    #endregion

    #region CreatedByID
    [PXDBCreatedByID()]
    public virtual Guid? CreatedByID { get; set; }
    public abstract class createdByID : PX.Data.BQL.BqlGuid.Field<createdByID> { }
    #endregion

    #region CreatedByScreenID
    [PXDBCreatedByScreenID()]
    public virtual string CreatedByScreenID { get; set; }
    public abstract class createdByScreenID : PX.Data.BQL.BqlString.Field<createdByScreenID> { }
    #endregion

    #region CreatedDateTime
    [PXDBCreatedDateTime()]
    [PXUIField(DisplayName = "Created Date Time")]
    public virtual DateTime? CreatedDateTime { get; set; }
    public abstract class createdDateTime : PX.Data.BQL.BqlDateTime.Field<createdDateTime> { }
    #endregion

    #region LastModifiedByID
    [PXDBLastModifiedByID()]
    public virtual Guid? LastModifiedByID { get; set; }
    public abstract class lastModifiedByID : PX.Data.BQL.BqlGuid.Field<lastModifiedByID> { }
    #endregion

    #region LastModifiedByScreenID
    [PXDBLastModifiedByScreenID()]
    public virtual string LastModifiedByScreenID { get; set; }
    public abstract class lastModifiedByScreenID : PX.Data.BQL.BqlString.Field<lastModifiedByScreenID> { }
    #endregion

    #region LastModifiedDateTime
    [PXDBLastModifiedDateTime()]
    [PXUIField(DisplayName = "Last Modified Date Time")]
    public virtual DateTime? LastModifiedDateTime { get; set; }
    public abstract class lastModifiedDateTime : PX.Data.BQL.BqlDateTime.Field<lastModifiedDateTime> { }
    #endregion
  }
}]]></CDATA>
</Graph>