<Graph ClassName="DBTire" Source="#CDATA" IsNew="True" FileType="NewDac">
    <CDATA name="Source"><![CDATA[using System;
using PX.Data;

namespace Dispatch
{
  [Serializable]
  public class DBTire : IBqlTable
  {
    #region RefNbr
    [PXDBString(15, IsKey = true, IsUnicode = true, InputMask = "")]
    [PXUIField(DisplayName = "Ref Nbr")]
        [PXDBDefault(typeof(DTMFMaster.refNbr))]
    [PXParent(typeof(Select<DTMFMaster,Where<DTMFMaster.refNbr,Equal<Current<refNbr>>>>))]
    public virtual string RefNbr { get; set; }
    public abstract class refNbr : PX.Data.BQL.BqlString.Field<refNbr> { }
    #endregion

    #region LineNbr
    [PXDBInt(IsKey = true)]
    [PXUIField(DisplayName = "Line Nbr")]
      [PXLineNbr(typeof(DTMFMaster.lineCntr))]
    public virtual int? LineNbr { get; set; }
    public abstract class lineNbr : PX.Data.BQL.BqlInt.Field<lineNbr> { }
    #endregion

    #region Codeid
    [PXDBInt()]
    [PXUIField(DisplayName = "Code")]
    [PXSelector(typeof(Search<TireMaint.codeid>),typeof(TireMaint.description),typeof(TireMaint.amount),SubstituteKey = typeof(TireMaint.codecd))]
    public virtual int? Codeid { get; set; }
    public abstract class codeid : PX.Data.BQL.BqlInt.Field<codeid> { }
    #endregion

    #region Description
    [PXDBString(100, IsUnicode = true, InputMask = "")]
    [PXUIField(DisplayName = "Description")]
    public virtual string Description { get; set; }
    public abstract class description : PX.Data.BQL.BqlString.Field<description> { }
    #endregion

    #region Amount
    [PXDBDecimal()]
    [PXUIField(DisplayName = "Amount")]
              [PXDefault(TypeCode.Decimal, "0.00", PersistingCheck = PXPersistingCheck.Nothing)]
      
    public virtual Decimal? Amount { get; set; }
    public abstract class amount : PX.Data.BQL.BqlDecimal.Field<amount> { }
    #endregion

    #region TireIn
    [PXDBBool()]
    [PXUIField(DisplayName = "In")]
      [PXDefault(false,PersistingCheck = PXPersistingCheck.Nothing)]
    public virtual bool? TireIn { get; set; }
    public abstract class tireIn : PX.Data.BQL.BqlBool.Field<tireIn> { }
    #endregion

    #region TireOut
    [PXDBBool()]
    [PXUIField(DisplayName = "Out")]
      [PXDefault(false,PersistingCheck = PXPersistingCheck.Nothing)]
    public virtual bool? TireOut { get; set; }
    public abstract class tireOut : PX.Data.BQL.BqlBool.Field<tireOut> { }
    #endregion

    #region Tstamp
    [PXDBTimestamp()]
    [PXUIField(DisplayName = "Tstamp")]
    public virtual byte[] Tstamp { get; set; }
    public abstract class tstamp : PX.Data.BQL.BqlByteArray.Field<tstamp> { }
    #endregion

    #region CreatedByID
    [PXDBCreatedByID()]
    public virtual Guid? CreatedByID { get; set; }
    public abstract class createdByID : PX.Data.BQL.BqlGuid.Field<createdByID> { }
    #endregion

    #region CreatedByScreenID
    [PXDBCreatedByScreenID()]
    public virtual string CreatedByScreenID { get; set; }
    public abstract class createdByScreenID : PX.Data.BQL.BqlString.Field<createdByScreenID> { }
    #endregion

    #region CreatedDateTime
    [PXDBCreatedDateTime()]
    [PXUIField(DisplayName = "Created Date Time")]
    public virtual DateTime? CreatedDateTime { get; set; }
    public abstract class createdDateTime : PX.Data.BQL.BqlDateTime.Field<createdDateTime> { }
    #endregion

    #region LastModifiedByID
    [PXDBLastModifiedByID()]
    public virtual Guid? LastModifiedByID { get; set; }
    public abstract class lastModifiedByID : PX.Data.BQL.BqlGuid.Field<lastModifiedByID> { }
    #endregion

    #region LastModifiedByScreenID
    [PXDBLastModifiedByScreenID()]
    public virtual string LastModifiedByScreenID { get; set; }
    public abstract class lastModifiedByScreenID : PX.Data.BQL.BqlString.Field<lastModifiedByScreenID> { }
    #endregion

    #region LastModifiedDateTime
    [PXDBLastModifiedDateTime()]
    [PXUIField(DisplayName = "Last Modified Date Time")]
    public virtual DateTime? LastModifiedDateTime { get; set; }
    public abstract class lastModifiedDateTime : PX.Data.BQL.BqlDateTime.Field<lastModifiedDateTime> { }
    #endregion
  }
}]]></CDATA>
</Graph>