<Graph ClassName="PickListContent" Source="#CDATA" IsNew="True" FileType="NewDac">
    <CDATA name="Source"><![CDATA[using System;
using PX.Data;
using PX.Objects.SO;
using PL;

namespace Dispatch
{
  [Serializable]
  public class PickListContent : IBqlTable
  {
    #region PicklistNbr
    [PXDBString(15, IsUnicode = true, InputMask = "")]
    [PXUIField(DisplayName = "Picklist Nbr")]
    public virtual string PicklistNbr { get; set; }
    public abstract class picklistNbr : PX.Data.BQL.BqlString.Field<picklistNbr> { }
    #endregion

    #region OrderNbr
    [PXDBString(15, IsKey = true, IsUnicode = true, InputMask = "")]
    [PXUIField(DisplayName = "Order Nbr")]
    public virtual string OrderNbr { get; set; }
    public abstract class orderNbr : PX.Data.BQL.BqlString.Field<orderNbr> { }
    #endregion

    #region OrderType
    [PXDBString(2, IsKey = true, IsFixed = true, InputMask = "")]
    [PXUIField(DisplayName = "Order Type")]
    public virtual string OrderType { get; set; }
    public abstract class orderType : PX.Data.BQL.BqlString.Field<orderType> { }
    #endregion

    #region LineNbr
    [PXDBInt(IsKey = true)]
    [PXUIField(DisplayName = "Line Nbr")]
    [PXParent(typeof(Select<PLPickListLine,Where<PLPickListLine.lineNbr,Equal<Current<lineNbr>>,And<Where<PLPickListLine.pickListNbr,Equal<Current<picklistNbr>>>>>>))]
    public virtual int? LineNbr { get; set; }
    public abstract class lineNbr : PX.Data.BQL.BqlInt.Field<lineNbr> { }
        #endregion

    #region SOLineNbr
    [PXDBInt(IsKey = true)]
    [PXUIField(DisplayName = "SO Line Nbr")]
    [PXParent(typeof(Select<SOLine>))]
    public virtual int? SOLineNbr { get; set; }
    public abstract class sOLineNbr : PX.Data.BQL.BqlInt.Field<sOLineNbr> { }
        #endregion

    #region PickQty
        [PXDBDecimal()]
    [PXUIField(DisplayName = "Pick Qty")]
    
    public virtual Decimal? PickQty { get; set; }
    public abstract class pickQty : PX.Data.BQL.BqlDecimal.Field<pickQty> { }
    #endregion

    #region PickOpenQty
    [PXDBDecimal()]
    [PXUIField(DisplayName = "Pick Open Qty")]
    public virtual Decimal? PickOpenQty { get; set; }
    public abstract class pickOpenQty : PX.Data.BQL.BqlDecimal.Field<pickOpenQty> { }
    #endregion

    #region Tstamp
    [PXDBTimestamp()]
    [PXUIField(DisplayName = "Tstamp")]
    public virtual byte[] Tstamp { get; set; }
    public abstract class tstamp : PX.Data.BQL.BqlByteArray.Field<tstamp> { }
    #endregion

    #region CreatedByID
    [PXDBCreatedByID()]
    public virtual Guid? CreatedByID { get; set; }
    public abstract class createdByID : PX.Data.BQL.BqlGuid.Field<createdByID> { }
    #endregion

    #region CreatedByScreenID
    [PXDBCreatedByScreenID()]
    public virtual string CreatedByScreenID { get; set; }
    public abstract class createdByScreenID : PX.Data.BQL.BqlString.Field<createdByScreenID> { }
    #endregion

    #region CreatedDateTime
    [PXDBCreatedDateTime()]
    [PXUIField(DisplayName = "Created Date Time")]
    public virtual DateTime? CreatedDateTime { get; set; }
    public abstract class createdDateTime : PX.Data.BQL.BqlDateTime.Field<createdDateTime> { }
    #endregion

    #region LastModifiedByID
    [PXDBLastModifiedByID()]
    public virtual Guid? LastModifiedByID { get; set; }
    public abstract class lastModifiedByID : PX.Data.BQL.BqlGuid.Field<lastModifiedByID> { }
    #endregion

    #region LastModifiedByScreenID
    [PXDBLastModifiedByScreenID()]
    public virtual string LastModifiedByScreenID { get; set; }
    public abstract class lastModifiedByScreenID : PX.Data.BQL.BqlString.Field<lastModifiedByScreenID> { }
    #endregion

    #region LastModifiedDateTime
    [PXDBLastModifiedDateTime()]
    [PXUIField(DisplayName = "Last Modified Date Time")]
    public virtual DateTime? LastModifiedDateTime { get; set; }
    public abstract class lastModifiedDateTime : PX.Data.BQL.BqlDateTime.Field<lastModifiedDateTime> { }
    #endregion
  }
}]]></CDATA>
</Graph>